@using MarineFarm.DTO;
@using MarineFarm.Entitys;
@model EquipoDTO_in

@{
    ViewData["Title"] = ViewBag.heading = "Cargos";
    // => este es sobre el boton para expandir y el grupo de botones
    ViewBag.EquipoAriaExpanded = "true";
    ViewBag.EquipoGroupActive = "active";
    // => este es simplemente para que se vea la poscicion actual
    ViewBag.EquipoColapseGroup = "show";
    ViewBag.EquipoNavLink = "active";
    List<__inV> lista = ViewBag.Cargos;
}

<div class="card">
  <div class="card-header p-0 mx-3 mt-3 position-relative z-index-1">
    <h3 class="card-title">
        Nuevo
    </h3>
  </div>

  <div class="card-body pt-2">
    @*<form asp-action="Guardar" method="post">*@
         <div class="row">
            <div class="form-group col-md-6 col-xs-12">
                <label asp-for="turno.Name" class="control-label"> Nombre</label>
                <input id="Name" asp-for="turno.Name" class="form-control text-to-upper-alau" />
                <span asp-validation-for="turno.Name" class="text-danger"></span>
            </div>
            <div class="form-group col-md-6 col-xs-12">
                <label asp-for="turno.Desc" class="control-label"> Breve Descripcion </label>
                <input id="Descripcion" asp-for="turno.Desc" class="form-control text-to-upper-alau" />
                <span asp-validation-for="turno.Desc" class="text-danger"></span>
            </div>

                @foreach(var item in lista)
                {

                @if (item.CantCubierta <= 0)
                    item.CantCubierta = 1;

                    <div class="CargoGoup row">
                        <input type="hidden" value="@item.Cargoid" name="idCargo" />
                        
                         <div class="form-group col-md-3 col-xs-12">
                            <label  class="control-label">Cargo </label>
                            <input disabled value="@item.CargoName" class="form-control text-to-upper-alau" />
                        </div>
                        
                         <div class="form-group col-md-3 col-xs-12">
                            <label  class="control-label">Cantidad Cubierta </label>
                            <input max=@item.CantOperadoresNecesario min='0' 
                            type="number" value="@item.CantCubierta" 
                            class="form-control text-to-upper-alau" 
                            name="cantCubierta"
                            />
                        </div>
                         <div class="form-group col-md-3 col-xs-12">
                            <label  class="control-label">Costo Mensual Por operario </label>
                            <input type="number" 
                            value=@item.CostoOperario
                            name="Coperativos" 
                            class="form-control" />
                        </div>

                         <div class="form-group col-md-3 col-xs-12">
                            <label  class="control-label">Seleccione Bono </label>
                            <select name="Cbono" asp-items=@ViewBag.Bonos class="form-control"></select>
                        </div>

                    </div>
                    
                    
                }    


        </div>
         <div class="card-footer form-group text-center m-0">
             <button class="btn btn-primary" onclick="sender()">
                 Crear
             </button>
             <a class="btn btn-danger rounded-pill" asp-action="Index">Volver</a>
         </div>
    @*</form>*@
  
  </div>
</div>


<script>

    

    const sender = () => {
            
        //obtener datos
        const name = document.getElementById('Name')
        const desc = document.getElementById('Descripcion')
        const cc = obtenerCargos()
        //crear el bloque de datos para enviar
        const turno = {
            Name: name.value,
            Desc: desc.value,
        }
        const datos = {
                        turno: turno,
                        cargos: JSON.stringify(cc),
                }

      
        //enviar los datos
            $.ajax({
                data: datos,
                url:   'Guardar', //archivo que recibe la peticion
                type:  'post', //método de envio
                success:  function (response) { //una vez que el archivo recibe el request lo procesa y lo devuelve
                      if(response){
                          AlertSuccess("Equipo Creado Exitosamente")
                          setTimeout( function() { window.location.href = "/Equipo"; }, 1500 );
                      }else{
                          AlertError("Upps, Error Inesperado","algo no esta bien intente de nuevo mas tarde")
                      }
                }
        });


    }


    const obtenerCargos = () => {
        let cargos = [];
        const idCargos = document.getElementsByName('idCargo')
        const CantCubiertas = document.getElementsByName('cantCubierta')
        const Coperativos = document.getElementsByName('Coperativos')
        const Cbono = document.getElementsByName('Cbono')

        console.log(idCargos.length)
       

        //organizar la data
        let numero = idCargos.length
        if(numero > 0){
            for(let i =0; i < numero ; i++){
                cargos.push({
                    Cargoid: idCargos[i].value,
                    CantCubierta: CantCubiertas[i].value,
                    CostoOperario: Coperativos[i].value,
                    Bonoid: Cbono[i].value
                })
            }
        }
        return cargos

    }

</script>
