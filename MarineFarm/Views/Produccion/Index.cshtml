@using MarineFarm.DTO;
@using MarineFarm.Entitys;
@model IEnumerable<PivotProduccionDTO_in>

@{
    ViewData["Title"] = ViewBag.heading = "Produccion";
    // => este es sobre el boton para expandir y el grupo de botones
    ViewBag.ProduccionAriaExpanded = "true";
    ViewBag.ProduccionGroupActive = "active";
    // => este es simplemente para que se vea la poscicion actual
    ViewBag.ProduccionColapseGroup = "show";
    ViewBag.ProduccionNavLink = "active";
   
}


<div class="card">
    <div class="card-header p-0 mx-3 mt-3 position-relative z-index-1">
        <h3 class="card-title">
            Nuevo Pedido
        </h3>
    </div>

    <div class="card-body pt-2">
        <div class="row">
            
        </div>
    </div>
</div>

<div id="original">
    <div class="clonar">
        <div class="card mt-5">
            <div class="card-header">
                <div class="col-12">
                <button id="PlusM" class="btn btn-primary">+</button>
            </div>
                <div class="row">

                    <div class="form-group col-md-6 col-xs-12">
                        <label for="mariscoid" class="control-label"> Seleccione Marisco</label>
                        <select name="mariscoid" id="mariscoid" asp-items=@ViewBag.Mariscos class="form-control"></select>
                    </div>
                    
                    <div class="form-group col-md-6 col-xs-12">
                        <label for="gastado" class="control-label"> Cantidad Utilizada</label>
                        <input type="text" class="form-control" name="gastado" id="gastado" />
                    </div>
                     
                </div>
            </div>
            <div class="card-body mt-0">
                <div class="row"  id="cont">
                    <div class="form-group col-md-3 col-xs-12">
                        <label for="TipoProduccionid" class="control-label"> Tipo Produccion</label>
                        <select name="TipoProduccionid" asp-items=@ViewBag.Tps class="form-control"></select>
                    </div>
                    <div class="form-group col-md-3 col-xs-12">
                        <label for="Calibreid" class="control-label"> Calibre</label>
                        <select name="Calibreid" asp-items=@ViewBag.Calibres class="form-control"></select>
                    </div>
                    <div class="form-group col-md-3 col-xs-12">
                        <label for="Empaquetadoid" class="control-label"> Empaquetado</label>
                        <select name="Empaquetadoid" asp-items=@ViewBag.Empaquetados class="form-control"></select>
                    </div>
                    <div class="form-group col-md-3 col-xs-12">
                        <label for="solicitado" class="control-label"> Cantidad Solicitada</label>
                        <input name="solicitado" class="form-control" type="number" min="0" value="0" />
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="row">
                  <div class="col-12">
                      <button id="Generar" class="btn btn-danger">Guardar</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div hidden id="o2">
    <div class="clonar2">
        <div class="row"  >
                <div class="form-group col-md-3 col-xs-12">
                        <label for="TipoProduccionid" class="control-label"> Tipo Produccion</label>
                        <select name="TipoProduccionid"  asp-items=@ViewBag.Tps class="TipoProduccionid form-control"></select>
                    </div>
                    <div class="form-group col-md-3 col-xs-12">
                        <label for="Calibreid" class="control-label"> Calibre</label>
                        <select name="Calibreid" asp-items=@ViewBag.Calibres class="Calibreid form-control"></select>
                    </div>
                    <div class="form-group col-md-3 col-xs-12">
                        <label for="Empaquetadoid" class="control-label"> Empaquetado</label>
                        <select name="Empaquetadoid" asp-items=@ViewBag.Empaquetados class="form-control Empaquetadoid"></select>
                    </div>
                    <div class="form-group col-md-3 col-xs-12">
                        <label for="solicitado" class="control-label"> Cantidad Solicitada</label>
                        <input name="solicitado" class="form-control solicitado" type="number" min="0" value="0" />
                    </div>
                    </div>
        </div>
</div>



<script>
     const PlusM = document.getElementById('PlusM')
   // const PlusD = document.getElementById('PlusD')
    const cont = document.getElementById('cont');

    let generar = document.getElementById('Generar')

    let contador = 1;

    let Subconid = 0

    // para generar toda uno tarjeta
    PlusM.addEventListener('click', function(e){
        e.preventDefault()

        const clone = document.querySelector('.clonar2')
        let copy = clone.cloneNode(true)

        cont.appendChild(copy).classList.remove('clonar2')

      
    })


      const ObtenerValores = () => {
       let mariscoid = document.getElementById('mariscoid').value
       let gastado = document.getElementById('gastado').value
       let tpin = document.getElementsByName('TipoProduccionid')
       let cin = document.getElementsByName('Calibreid')
       let ein = document.getElementsByName('Empaquetadoid')
       let sin = document.getElementsByName('solicitado')

       console.log(gastado)

       
       let usado=[]
       let pedido=[]

        usado.push({
            mariscoid :mariscoid,
            usado: gastado 
        })



       for(let i=0 ; i<tpin.length -1 ; i++){
           const tp = tpin[i].value
           const c = tpin[i].value
           const e = ein[i].value
           const s = sin[i].value

           pedido.push({
               mariscoid:mariscoid,
               tipoProduccion:tp,
               calibre:c,
               empaquetado:e,
               producidoSS:s
           })

       }

       return {
           usado: JSON.stringify(usado),
           pedido: JSON.stringify(pedido)
       }
   }

     // esta funcion es la que guarda los datos
   const Guardar = () => {
        let data = ObtenerValores()
             $.ajax({
                data: data,
                url:   'Produccion/SeeData', //archivo que recibe la peticion
                type:  'post', //método de envio
                success:  function (response) { //una vez que el archivo recibe el request lo procesa y lo devuelve
                    if(response){
                        AlertSuccess("Elemento Almacenado Correctamente")
                        setTimeout( function() { window.location.href = "/Produccion"; }, 1500 );
                    }else{
                        AlertError("Upps, Error Inesperado","algo no esta bien intente de nuevo mas tarde")
                    }
                }
        });
   }


   generar.addEventListener('click', function(){
       Guardar()                                          
   })
</script>